{
  "name": "jasmine-terminal-reporter",
  "version": "1.0.0",
  "description": "A simple terminal reporter for Jasmine",
  "main": "index.js",
  "homepage": "https://github.com/jbblanchet/jasmine-terminal-reporter",
  "bugs": {
    "url": "https://github.com/jbblanchet/jasmine-terminal-reporter/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jbblanchet/jasmine-terminal-reporter"
  },
  "license": "MIT",
  "files": [
    "index.js",
    "formatter.js"
  ],
  "scripts": {
    "test": "gulp"
  },
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-istanbul": "^0.10.0",
    "gulp-jscs": "^1.6.0",
    "gulp-jshint": "^1.11.2",
    "gulp-mocha": "^2.1.3",
    "gulp-plumber": "^1.0.1",
    "jshint-stylish": "^2.0.1"
  },
  "dependencies": {
    "indent-string": "^1.2.1",
    "pluralize": "^1.1.2"
  },
  "readme": "jasmine-terminal-reporter\r\n=========================\r\n\r\nA simple terminal reporter for Jasmine, inspired by [juliemr/minijasminenode](https://github.com/juliemr/minijasminenode).\r\n\r\ninstallation\r\n------------\r\n\r\nGet the library with\r\n\r\n    npm install jasmine-terminal-reporter\r\n\r\nusage\r\n-----\r\n\r\nDepends on your jasmine spec runner, but to import and instantiate the reporter:\r\n\r\n```javascript\r\n    var Reporter = require('jasmine-terminal-reporter');\r\n    var reporter = new Reporter(options)\r\n```\r\n\r\noutput\r\n------\r\n\r\nBy default, the output will be fairly compact. Each test is represented by a green dot (passed), a red F (failed) or a yellow * (pending). Every failed test and expectation will be detailed, and a summary will be printed at the end:\r\n\r\n```\r\n.....................F..*..*....*.....\r\n\r\nFailures:\r\n1) A suite with a test will fail\r\n1.1) Expected true to be false.\r\n\r\n38 specs, 1 failures, 3 pending\r\nFinished in 0.5 seconds\r\n```\r\n\r\nIf verbose mode is selected, each suite and spec is detailed:\r\n```\r\nRunning 38 specs.\r\n\r\nA suite\r\n  nested in another\r\n      has a test that passes: passed\r\n      has a test that fails: failed\r\n\r\n[...]\r\n\r\nFailures:\r\n1) A suite nested in another has a test that fails\r\n1.1) Expected true to be false.\r\n\r\n38 specs, 1 failure\r\nFinished in 0.5 seconds\r\n```\r\n\r\noptions\r\n-------\r\n* **`isVerbose`**: see above.\r\n\r\n* **`includeStackTrace`**: (Default: false) Displays the stack trace on failed tests\r\n\r\n* **`showColors`**: (Default: true) \r\n\r\n* **`done`**: Optional method to call when jasmine is done. First argument is true if all tests have passed\r\n or are pending.\r\n\r\n* **`formatStack`**: Optional method called to format the stack trace. Receives a string as the first parameter and returns the formatted stack trace.\r\n\r\n* **`print`**: Optionnal method used to display the output. By default, will write to process.stdout.",
  "readmeFilename": "README.md",
  "_id": "jasmine-terminal-reporter@1.0.0",
  "dist": {
    "shasum": "cddc8f370df143c0374edae3eafae044de19f79f"
  },
  "_from": "jasmine-terminal-reporter@^1.0.0",
  "_resolved": "https://registry.npmjs.org/jasmine-terminal-reporter/-/jasmine-terminal-reporter-1.0.0.tgz"
}
